{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Samarth\\\\graphql-project\\\\client\\\\src\\\\components\\\\AddBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getAuthorsQuery } from '../queries/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddBook(props) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n\n  const displayAuthors = () => {\n    var data = props.data;\n    ;\n\n    if (data.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading authors..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    } else {\n      return data.authors.map(author => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: author.name\n        }, author.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-book\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Book Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          children: displayAuthors()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddBook, \"b/vp6uc5dd55ZWJuD+dsF86wMiI=\");\n\n_c = AddBook;\nexport default graphql(getAuthorsQuery)(AddBook);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["D:/Users/Samarth/graphql-project/client/src/components/AddBook.js"],"names":["React","useState","graphql","getAuthorsQuery","AddBook","props","name","setName","genre","setGenre","displayAuthors","data","loading","authors","map","author","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAAQC,eAAR,QAA8B,oBAA9B;;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMS,cAAc,GAAG,MAAK;AAExB,QAAIC,IAAI,GAAGN,KAAK,CAACM,IAAjB;AAAsB;;AACtB,QAAGA,IAAI,CAACC,OAAR,EAAgB;AACZ,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAKI;AACA,aAAOD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAkBC,MAAD,IAAU;AAC9B,4BACI;AAAA,oBAAyBA,MAAM,CAACT;AAAhC,WAAaS,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJM,CAAP;AAKH;AAEJ,GAhBD;;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBACKN,cAAc;AADnB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GA7CQN,O;;KAAAA,O;AA+CT,eAAeF,OAAO,CAACC,eAAD,CAAP,CAAyBC,OAAzB,CAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport { graphql } from 'react-apollo';\r\nimport {getAuthorsQuery} from '../queries/queries';\r\n\r\n\r\nfunction AddBook(props) {\r\n\r\n    const [name,setName] = useState(\"\");\r\n    const [genre, setGenre] = useState(\"\")\r\n\r\n    const displayAuthors = () =>{\r\n        \r\n        var data = props.data;;\r\n        if(data.loading){\r\n            return (\r\n                <div>Loading authors..</div>\r\n            );\r\n        }\r\n        else{\r\n            return data.authors.map((author)=>{\r\n                return(\r\n                    <option key={author.id}>{author.name}</option>\r\n                )\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-book\">\r\n            <form>\r\n                <div className=\"field\">\r\n                    <label>Book Name</label>\r\n                    <input type=\"text\"></input>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Genre</label>\r\n                    <input type=\"text\"></input>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Author</label>\r\n                    <select>\r\n                        {displayAuthors()}\r\n                    </select>\r\n                </div>\r\n\r\n                <button>+</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default graphql(getAuthorsQuery)(AddBook);\r\n"]},"metadata":{},"sourceType":"module"}