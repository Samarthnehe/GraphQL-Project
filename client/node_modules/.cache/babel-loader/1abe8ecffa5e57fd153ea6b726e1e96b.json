{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Samarth\\\\graphql-project\\\\client\\\\src\\\\components\\\\BookDetails.js\";\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBookQuery } from '../queries/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookDetails(props) {\n  const displayBookDetails = () => {\n    var {\n      book\n    } = props.data;\n\n    if (book) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: book.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: book.genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"book.author.name}\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"All books by this author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"other-books\",\n          children: book.author.books.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item.name\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"No book selected...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-details\",\n    children: displayBookDetails()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_c = BookDetails;\nexport default graphql(getBookQuery)(BookDetails);\n\nvar _c;\n\n$RefreshReg$(_c, \"BookDetails\");","map":{"version":3,"sources":["D:/Users/Samarth/graphql-project/client/src/components/BookDetails.js"],"names":["React","graphql","getBookQuery","BookDetails","props","displayBookDetails","book","data","name","genre","author","books","map","item","id","marginTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAExB,QAAMC,kBAAkB,GAAG,MAAK;AAC5B,QAAI;AAACC,MAAAA;AAAD,QAASF,KAAK,CAACG,IAAnB;;AACA,QAAGD,IAAH,EAAQ;AACJ,0BACI;AAAA,gCACI;AAAA,oBAAKA,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oBACKH,IAAI,CAACI,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsBC,IAAI,IAAE;AACzB,gCACI;AAAA,wBAAmBA,IAAI,CAACL;AAAxB,eAASK,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH,WAJA;AADL;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAeH,KAhBD,MAiBI;AACA,0BACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC;AAAX,SAAZ;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AACJ,GA1BD;;AA4BA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACIV,kBAAkB;AADtB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KAnCQF,W;AAqCT,eAAeF,OAAO,CAACC,YAAD,CAAP,CAAsBC,WAAtB,CAAf","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport { getBookQuery } from '../queries/queries';\r\n\r\n\r\nfunction BookDetails(props) {\r\n\r\n    const displayBookDetails = () =>{\r\n        var {book} = props.data;\r\n        if(book){\r\n            return(\r\n                <div>\r\n                    <h2>{book.name}</h2>\r\n                    <p>{book.genre}</p>\r\n                    <p>book.author.name}</p>\r\n                    <p>All books by this author:</p>\r\n                    <ul className=\"other-books\">\r\n                        {book.author.books.map(item=>{\r\n                            return (\r\n                                <li key={item.id}>{item.name}</li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div style={{marginTop:\"20px\"}}>\r\n                    <h4>No book selected...</h4>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"book-details\">\r\n           {displayBookDetails()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default graphql(getBookQuery)(BookDetails);\r\n"]},"metadata":{},"sourceType":"module"}