{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Samarth\\\\graphql-project\\\\client\\\\src\\\\components\\\\AddBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { graphql } from 'react-apollo';\nimport { flowRight as compose } from 'lodash';\nimport './AddBook.css';\nimport { getAuthorsQuery, addBooksMutation, getBooksQuery } from '../queries/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddBook(props) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [authorId, setAuthorId] = useState(\"\");\n\n  const displayAuthors = () => {\n    var data = props.getAuthorsQuery;\n\n    if (data.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading authors..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this);\n    } else {\n      return data.authors.map(author => {\n        console.log(author.id);\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: author.id,\n          children: author.name\n        }, author.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this);\n      });\n    }\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    props.addBooksMutation({\n      variables: {\n        name: name,\n        genre: genre,\n        authorid: authorId\n      },\n      refetchQueries: [{\n        query: getBooksQuery\n      }]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-book\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => submitForm(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"bBook\", {\n            Name: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setName(e.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setGenre(e.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setAuthorId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), displayAuthors()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddBook, \"h6MkuStGWMoJqN48WtY/YgZ1JOw=\");\n\n_c = AddBook;\nexport default compose(graphql(getAuthorsQuery, {\n  name: \"getAuthorsQuery\"\n}), graphql(addBooksMutation, {\n  name: \"addBooksMutation\"\n}))(AddBook);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["D:/Users/Samarth/graphql-project/client/src/components/AddBook.js"],"names":["React","useState","graphql","flowRight","compose","getAuthorsQuery","addBooksMutation","getBooksQuery","AddBook","props","name","setName","genre","setGenre","authorId","setAuthorId","displayAuthors","data","loading","authors","map","author","console","log","id","submitForm","e","preventDefault","variables","authorid","refetchQueries","query","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,SAAS,IAAIC,OAAtB,QAAqC,QAArC;AACA,OAAO,eAAP;AACA,SAAQC,eAAR,EAAyBC,gBAAzB,EAA2CC,aAA3C,QAA+D,oBAA/D;;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMe,cAAc,GAAG,MAAK;AAExB,QAAIC,IAAI,GAAGR,KAAK,CAACJ,eAAjB;;AACA,QAAGY,IAAI,CAACC,OAAR,EAAgB;AACZ,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAKI;AACA,aAAOD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAkBC,MAAD,IAAU;AAC9BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,EAAnB;AACA,4BACI;AAAwB,UAAA,KAAK,EAAEH,MAAM,CAACG,EAAtC;AAAA,oBAA2CH,MAAM,CAACX;AAAlD,WAAaW,MAAM,CAACG,EAApB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OALM,CAAP;AAMH;AAEJ,GAjBD;;AAmBA,QAAMC,UAAU,GAAIC,CAAD,IAAM;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAlB,IAAAA,KAAK,CAACH,gBAAN,CAAuB;AACnBsB,MAAAA,SAAS,EAAC;AACNlB,QAAAA,IAAI,EAACA,IADC;AAENE,QAAAA,KAAK,EAACA,KAFA;AAGNiB,QAAAA,QAAQ,EAACf;AAHH,OADS;AAMnBgB,MAAAA,cAAc,EAAC,CAAC;AAACC,QAAAA,KAAK,EAACxB;AAAP,OAAD;AANI,KAAvB;AASH,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAGmB,CAAD,IAAKD,UAAU,CAACC,CAAD,CAA/B;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA,iCAAO;AAAO,YAAA,IAAI;AAAX;AAAA;AAAA;AAAA;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,QAAQ,EAAGA,CAAD,IAAKf,OAAO,CAACe,CAAC,CAACM,MAAF,CAASC,KAAV,CAA7B;AAA+C,UAAA,IAAI,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA,iCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,QAAQ,EAAGP,CAAD,IAAKb,QAAQ,CAACa,CAAC,CAACM,MAAF,CAASC,KAAV,CAA9B;AAAgD,UAAA,IAAI,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA,iCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,QAAQ,EAAGP,CAAD,IAAKX,WAAW,CAACW,CAAC,CAACM,MAAF,CAASC,KAAV,CAAlC;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKjB,cAAc,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA7DQR,O;;KAAAA,O;AA+DT,eAAeJ,OAAO,CAClBF,OAAO,CAACG,eAAD,EAAiB;AAACK,EAAAA,IAAI,EAAC;AAAN,CAAjB,CADW,EAElBR,OAAO,CAACI,gBAAD,EAAkB;AAACI,EAAAA,IAAI,EAAC;AAAN,CAAlB,CAFW,CAAP,CAGbF,OAHa,CAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport { graphql } from 'react-apollo';\r\nimport { flowRight as compose } from 'lodash';\r\nimport './AddBook.css';\r\nimport {getAuthorsQuery, addBooksMutation, getBooksQuery} from '../queries/queries';\r\n\r\n\r\nfunction AddBook(props) {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [genre, setGenre] = useState(\"\");\r\n    const [authorId, setAuthorId] = useState(\"\");\r\n\r\n    const displayAuthors = () =>{\r\n        \r\n        var data = props.getAuthorsQuery;\r\n        if(data.loading){\r\n            return (\r\n                <div>Loading authors..</div>\r\n            );\r\n        }\r\n        else{\r\n            return data.authors.map((author)=>{\r\n                console.log(author.id);\r\n                return(\r\n                    <option key={author.id} value={author.id}>{author.name}</option>\r\n                )\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const submitForm = (e) =>{\r\n        e.preventDefault();  \r\n        props.addBooksMutation({\r\n            variables:{\r\n                name:name,\r\n                genre:genre,\r\n                authorid:authorId\r\n            },\r\n            refetchQueries:[{query:getBooksQuery}]\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-book\">\r\n            <form onSubmit={(e)=>submitForm(e)}>\r\n                <div className=\"field\">\r\n                    <label><bBook Name></bBook></label>\r\n                    <input onChange={(e)=>setName(e.target.value)} type=\"text\"></input>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label><b>Genre</b></label>\r\n                    <input onChange={(e)=>setGenre(e.target.value)} type=\"text\"></input>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label><b>Genre</b></label>\r\n                    <select onChange={(e)=>setAuthorId(e.target.value)}>\r\n                        <option>Select Author</option>\r\n                        {displayAuthors()}\r\n                    </select>\r\n                </div>\r\n\r\n                <button>+</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    graphql(getAuthorsQuery,{name:\"getAuthorsQuery\"}),\r\n    graphql(addBooksMutation,{name:\"addBooksMutation\"})\r\n)(AddBook);\r\n"]},"metadata":{},"sourceType":"module"}