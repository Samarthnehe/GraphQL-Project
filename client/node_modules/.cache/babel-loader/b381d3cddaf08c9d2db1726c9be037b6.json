{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Samarth\\\\graphql-project\\\\client\\\\src\\\\components\\\\BookList.js\";\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getBooksQuery = gql`\n    {\n        books{\n            name\n            id\n        }\n    }\n`;\n\nfunction BookList(props) {\n  const displayBooks = () => {\n    var data = props.data;\n    ;\n\n    if (data.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading books..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n    } else {\n      return data.books.map(book => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: book.name\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"books\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"book-list\",\n      children: displayBooks()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_c = BookList;\nexport default graphql(getBooksQuery)(BookList);\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["D:/Users/Samarth/graphql-project/client/src/components/BookList.js"],"names":["React","gql","graphql","getBooksQuery","BookList","props","displayBooks","data","loading","books","map","book","name","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;;AAEA,MAAMC,aAAa,GAAGF,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASG,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,QAAMC,YAAY,GAAG,MAAK;AAEtB,QAAIC,IAAI,GAAGF,KAAK,CAACE,IAAjB;AAAsB;;AACtB,QAAGA,IAAI,CAACC,OAAR,EAAgB;AACZ,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAKI;AACA,aAAOD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAgBC,IAAD,IAAQ;AAC1B,4BACI;AAAA,oBAAoBA,IAAI,CAACC;AAAzB,WAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAIH,OALM,CAAP;AAMH;AAEJ,GAjBD;;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBACKP,YAAY;AADjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KA3BQF,Q;AA6BT,eAAeF,OAAO,CAACC,aAAD,CAAP,CAAuBC,QAAvB,CAAf","sourcesContent":["import React from 'react';\r\nimport { gql } from 'apollo-boost';\r\nimport { graphql } from 'react-apollo';\r\n\r\nconst getBooksQuery = gql`\r\n    {\r\n        books{\r\n            name\r\n            id\r\n        }\r\n    }\r\n`\r\n\r\nfunction BookList(props) {\r\n\r\n    const displayBooks = () =>{\r\n        \r\n        var data = props.data;;\r\n        if(data.loading){\r\n            return (\r\n                <div>Loading books..</div>\r\n            );\r\n        }\r\n        else{\r\n            return data.books.map((book)=>{\r\n                return(\r\n                    <li key={book.id}>{ book.name }</li>\r\n                )\r\n                   \r\n            })\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"books\">\r\n            <ul className=\"book-list\">\r\n                {displayBooks()}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default graphql(getBooksQuery)(BookList);\r\n"]},"metadata":{},"sourceType":"module"}