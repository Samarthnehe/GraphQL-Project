{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Samarth\\\\graphql-project\\\\client\\\\src\\\\components\\\\AddBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getAuthorsQuery } from '../queries/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddBook(props) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [authorId, setAuthorId] = useState(\"\");\n\n  const displayAuthors = () => {\n    var data = props.data;\n    ;\n\n    if (data.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading authors..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this);\n    } else {\n      return data.authors.map(author => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: author.name\n        }, author.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this);\n      });\n    }\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    console.log(name);\n    console.log(genre);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-book\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => submitForm(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Book Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setName(e.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setGenre(e.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setAuthorId(e.target.value),\n          children: displayAuthors()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddBook, \"h6MkuStGWMoJqN48WtY/YgZ1JOw=\");\n\n_c = AddBook;\nexport default graphql(getAuthorsQuery)(AddBook);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["D:/Users/Samarth/graphql-project/client/src/components/AddBook.js"],"names":["React","useState","graphql","getAuthorsQuery","AddBook","props","name","setName","genre","setGenre","authorId","setAuthorId","displayAuthors","data","loading","authors","map","author","id","submitForm","e","preventDefault","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAAQC,eAAR,QAA8B,oBAA9B;;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMW,cAAc,GAAG,MAAK;AAExB,QAAIC,IAAI,GAAGR,KAAK,CAACQ,IAAjB;AAAsB;;AACtB,QAAGA,IAAI,CAACC,OAAR,EAAgB;AACZ,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAKI;AACA,aAAOD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAkBC,MAAD,IAAU;AAC9B,4BACI;AAAA,oBAAyBA,MAAM,CAACX;AAAhC,WAAaW,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJM,CAAP;AAKH;AAEJ,GAhBD;;AAkBA,QAAMC,UAAU,GAAIC,CAAD,IAAM;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AAGH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAGY,CAAD,IAAKD,UAAU,CAACC,CAAD,CAA/B;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,QAAQ,EAAGA,CAAD,IAAKb,OAAO,CAACa,CAAC,CAACI,MAAF,CAASC,KAAV,CAA7B;AAA+C,UAAA,IAAI,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,QAAQ,EAAGL,CAAD,IAAKX,QAAQ,CAACW,CAAC,CAACI,MAAF,CAASC,KAAV,CAA9B;AAAgD,UAAA,IAAI,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,QAAQ,EAAGL,CAAD,IAAKT,WAAW,CAACS,CAAC,CAACI,MAAF,CAASC,KAAV,CAAlC;AAAA,oBACKb,cAAc;AADnB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAtDQR,O;;KAAAA,O;AAwDT,eAAeF,OAAO,CAACC,eAAD,CAAP,CAAyBC,OAAzB,CAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport { graphql } from 'react-apollo';\r\nimport {getAuthorsQuery} from '../queries/queries';\r\n\r\n\r\nfunction AddBook(props) {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [genre, setGenre] = useState(\"\");\r\n    const [authorId, setAuthorId] = useState(\"\");\r\n\r\n    const displayAuthors = () =>{\r\n        \r\n        var data = props.data;;\r\n        if(data.loading){\r\n            return (\r\n                <div>Loading authors..</div>\r\n            );\r\n        }\r\n        else{\r\n            return data.authors.map((author)=>{\r\n                return(\r\n                    <option key={author.id}>{author.name}</option>\r\n                )\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const submitForm = (e) =>{\r\n        e.preventDefault();\r\n        console.log(name);\r\n        console.log(genre);\r\n    \r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-book\">\r\n            <form onSubmit={(e)=>submitForm(e)}>\r\n                <div className=\"field\">\r\n                    <label>Book Name</label>\r\n                    <input onChange={(e)=>setName(e.target.value)} type=\"text\"></input>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Genre</label>\r\n                    <input onChange={(e)=>setGenre(e.target.value)} type=\"text\"></input>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Author</label>\r\n                    <select onChange={(e)=>setAuthorId(e.target.value)}>\r\n                        {displayAuthors()}\r\n                    </select>\r\n                </div>\r\n\r\n                <button>+</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default graphql(getAuthorsQuery)(AddBook);\r\n"]},"metadata":{},"sourceType":"module"}