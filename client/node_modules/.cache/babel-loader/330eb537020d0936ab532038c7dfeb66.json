{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Samarth\\\\graphql-project\\\\client\\\\src\\\\components\\\\BookList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries';\nimport BookDetails from './BookDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookList(props) {\n  _s();\n\n  const [selected, setSelected] = useState(null);\n\n  const displayBooks = () => {\n    var data = props.data;\n\n    if (data.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading books..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this);\n    } else {\n      return data.books.map(book => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list_of_books\",\n          onClick: () => setSelected(book.id),\n          children: book.name\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"books\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"book-list\",\n      children: displayBooks()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BookDetails, {\n      bookId: selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookList, \"9wW+be0PLgdYeQHk7BRXBoNnat8=\");\n\n_c = BookList;\nexport default graphql(getBooksQuery)(BookList);\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["D:/Users/Samarth/graphql-project/client/src/components/BookList.js"],"names":["React","useState","graphql","getBooksQuery","BookDetails","BookList","props","selected","setSelected","displayBooks","data","loading","books","map","book","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBP,QAAQ,CAAC,IAAD,CAAvC;;AAEA,QAAMQ,YAAY,GAAG,MAAK;AAEtB,QAAIC,IAAI,GAAGJ,KAAK,CAACI,IAAjB;;AACA,QAAGA,IAAI,CAACC,OAAR,EAAgB;AACZ,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAKI;AACA,aAAOD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAgBC,IAAD,IAAQ;AAC1B,4BACI;AAAI,UAAA,SAAS,EAAC,eAAd;AAA4C,UAAA,OAAO,EAAE,MAAIN,WAAW,CAACM,IAAI,CAACC,EAAN,CAApE;AAAA,oBAAiFD,IAAI,CAACE;AAAtF,WAAmCF,IAAI,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAIH,OALM,CAAP;AAMH;AAEJ,GAjBD;;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBACKN,YAAY;AADjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA9BQF,Q;;KAAAA,Q;AAgCT,eAAeH,OAAO,CAACC,aAAD,CAAP,CAAuBE,QAAvB,CAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport { getBooksQuery } from '../queries/queries';\r\nimport BookDetails from './BookDetails';\r\n\r\nfunction BookList(props) {\r\n\r\n    const [selected,setSelected] = useState(null);\r\n\r\n    const displayBooks = () =>{\r\n        \r\n        var data = props.data;\r\n        if(data.loading){\r\n            return (\r\n                <div>Loading books..</div>\r\n            );\r\n        }\r\n        else{\r\n            return data.books.map((book)=>{\r\n                return(\r\n                    <li className=\"list_of_books\" key={book.id} onClick={()=>setSelected(book.id)}>{ book.name }</li>\r\n                )\r\n                   \r\n            })\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"books\">\r\n            <ul className=\"book-list\">\r\n                {displayBooks()}\r\n            </ul>\r\n            <BookDetails bookId={selected}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default graphql(getBooksQuery)(BookList);\r\n"]},"metadata":{},"sourceType":"module"}